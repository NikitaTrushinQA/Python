# Возводить в степень можно гораздо быстрее, чем за n умножений.
# Для этого нужно воспользоваться следующими рекуррентными соотношениями:
#
# a**n = (a**2)**(n/2) ,при четном n
# a**n = a * a**(n-1) ,при нечетном n

# Реализуйте функцию get_fast_pow() с использованием рекурсии, которая принимает два аргумента в следующем порядке:
#
# a — положительное целое число
# n — неотрицательное целое число
# Функция должна вычислять значение a в степени n, используя алгоритм быстрого возведения в степень,
# и возвращать полученный результат.
#
# Примечание 1. При решении не используйте оператор возведения в степень **.
#5,2   25
def get_fast_pow(a,n):
    if n==0:
        return 1
    elif n%2==0:
        return get_fast_pow(a,n/2) * get_fast_pow(a,n/2)
    else:
        return a * get_fast_pow(a,n-1)

print(get_fast_pow(5, 2))

