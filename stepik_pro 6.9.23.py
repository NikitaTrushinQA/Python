# Булочный магнат
# После ухода сети Макдональдс из России Тимур решил открыть свою небольшую бургерную.
# Цена каждого бургера в его ресторане определяется количеством ингредиентов, которые выбирает сам посетитель.
# Вам доступны словари, в которых в качестве ключа указано название ингредиента, а в качестве значения — его цена.
# Все ингредиенты разбиты по категориям, например, овощи содержатся в одном словаре, соусы — в другом.
#
# Напишите программу, которая принимает на вход ингредиенты, выбранные посетителем, и определяет их общую стоимость.
#
# Формат входных данных
# На вход программе подается последовательность ингредиентов, разделенных запятой без пробелов.
#
# Формат выходных данных
# Программа должна определить общую стоимость введенных ингредиентов и вывести полученный результат в виде чека,
# в котором указаны ингредиенты в лексикографическом порядке, количество каждых и их общая стоимость, в следующем формате:
#
# <ингредиент 1> x <количество 1>
# <ингредиент 2> x <количество 2>
# ...
# -------------------------------
# ИТОГ: <общая стоимость>р
# Примечание 1. Программа должна добавлять нужное количество пробелов, если один ингредиент имеет меньшую длину, чем другие.
#
# Примечание 2. Длина пунктирной линии должна равняться длине самой длинной строки в чеке, включая строку с итоговой стоимостью.
#
# Примечание 3. Гарантируется, что все ингредиенты, выбранные посетителем, присутствуют в словарях.
#
# Примечание 4. Тестовые данные доступны по ссылкам:
from collections import ChainMap
from collections import Counter

ing_input =input().split(',')
ingredients =Counter(ing_input)
ing_input_sorted= sorted(list(set(ing_input)))

maximum =len(sorted(ing_input_sorted,key=lambda x:len(x))[-1])


bread = {'булочка с кунжутом': 15, 'обычная булочка': 10, 'ржаная булочка': 15}
meat = {'куриный бифштекс': 50, 'говяжий бифштекс': 70, 'рыбный бифштекс': 40}
sauce = {'сливочно-чесночный': 15, 'кетчуп': 10, 'горчица': 10, 'барбекю': 15, 'чили': 15}
vegetables = {'лук': 10, 'салат': 15, 'помидор': 15, 'огурцы': 10}
toppings = {'сыр': 25, 'яйцо': 15, 'бекон': 30}

price=0

super_dict = ChainMap(bread,meat,sauce,vegetables,toppings)
for ing,num in ingredients.items():
    price+=super_dict[ing]*num

for ing in ing_input_sorted:
    print(f'{ing.ljust(maximum)} x {ingredients[ing]}')
if len('-'*(maximum+3+len(str(ingredients[ing]))))>len(f'ИТОГ: {price}р'):
    print('-'*(maximum+3+len(str(ingredients[ing]))))
else:
    print('-'*len(f'ИТОГ: {price}р'))
print(f'ИТОГ: {price}р')
