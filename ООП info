                                                                                                                  Принципы ООП

Абстракция

Абстракция — это использование только тех характеристик объекта, которые с достаточной точностью представляют его в данной системе. Основная идея состоит в том,
чтобы представить объект минимальным набором атрибутов и методов и при этом с достаточной точностью для решаемой задачи.

Абстракция является основой объектно-ориентированного программирования и позволяет работать с объектами, не вдаваясь в особенности их реализации.
Пользователь типа не имеет прямого доступа к его реализации, но может работать с данными через предоставленный набор операций. Преимущество абстракции данных в разделении операций над данными и внутреннего представления этих данных,
что позволяет изменять реализацию, не затрагивая пользователей данного типа.

Пример 1. Объекту класса Программист вряд ли понадобятся свойства "умение готовить еду" или "любимый цвет". Они не влияют на его особенности как программиста.
А вот "основной язык программирования" и "рабочие навыки" — важные свойства, без которых программиста не опишешь.

Пример 2. Человек, управляющий скутером, знает, что при нажатии на гудок издается звук, но зачастую он не имеет представления о том, как на самом деле этот звук создается при нажатии на гудок.

   Принцип абстракции позволяет нам скрывать детали и раскрывать только основные черты объекта.
Инкапсуляция


Инкапсуляция имеет два основных смысла. С одной стороны, она объединяет атрибуты и методы в одном объекте. С другой стороны, инкапсуляция обозначает сокрытие данных, то есть невозможность напрямую получить доступ к внутренней структуре объекта,
так как это может быть небезопасно. Например, наполнить желудок едой можно напрямую, положив еду в желудок.
Но это опасно. Поэтому прямой доступ к желудку закрыт. Чтобы наполнить его едой, нужно совершить ритуал через элемент интерфейса под названием рот.

Принцип инкапсуляции позволяет объектам содержать как свои данные, так и поведение, а также скрывать то, что ему потребуется, от внешнего программного кода.
Наследование

Наследование — способ создания класса на основе уже существующего, при котором дочерний класс заимствует атрибуты и методы родительского класса, а также добавляет собственные.

Дочерний класс часто называют производным классом, наследником или потомком, а родительский класс – предком или просто родителем.

Проведем аналогию с реальным миром. Если мы возьмем конкретный стол, то это объект, но не класс. А вот общее представление о столах, их назначении – это класс.
Ему принадлежат все реальные объекты столов, какими бы они ни были. Класс столов дает общую характеристику всем столам в мире, описывая их общие свойства.
Однако можно разделить все столы на письменные,
обеденные и журнальные и для каждой группы создать свой класс, который будет наследником общего класса, но помимо этого будет вносить ряд своих особенностей.




dir() - Для получения списка всех атрибутов и методов объекта можно воспользоваться встроенной функцией dir()
__dict__ -Все атрибуты, которыми мы наделяем созданные объекты, хранятся в специальном словаре, который доступен в качестве атрибута __dict__


                                                                                                       Функции, работающие с атрибутами

                                                                                                   Функция getattr() принимает три аргумента:

    obj — объект
    name — имя атрибута
    default — значение по умолчанию

Функция возвращает значение атрибута name объекта obj. Если объект obj не имеет атрибута name, возвращается значение по умолчанию default. Если значение по умолчанию не указано, возбуждается исключение AttributeError.

                                                                                                                   Функция setattr()

Функция setattr() принимает три аргумента:

    obj — объект
    name — имя атрибута
    value — значение атрибута

Функция устанавливает объекту obj атрибут name со значением value. Если объект obj уже имеет атрибут name, его значение перезаписывается.

                                                                                                               Функция delattr()

Функция delattr() принимает два аргумента:

    obj — объект
    name — имя атрибута

Функция удаляет атрибут name у объекта obj. Если объект не имеет атрибута name, возбуждается исключение AttributeError.

                                                                                                                Функция hasattr()

Функция hasattr() принимает два аргумента:

    obj — объект
    name — имя атрибута

Функция возвращает True, если объект obj имеет атрибут name, или False в противном случае.


