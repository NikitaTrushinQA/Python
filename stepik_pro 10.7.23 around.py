# Функция around()
# Реализуйте генераторную функцию, которая принимает один аргумент:
#
# iterable — итерируемый объект
# Функция должна возвращать генератор, порождающий последовательность кортежей,
# каждый из которых содержит очередной элемент итерируемого объекта iterable, а также предыдущий и следующий за ним элементы:
#
# (<предыдущий элемент>, <очередной элемент>, <следующий элемент>)
# Для первого элемента предыдущим считается значение None, для последнего элемента следующим считается так же значение None.
#
# Примечание 1. Элементы итерируемого объекта в возвращаемом функцией генераторе должны располагаться в своем исходном порядке.
#
# Примечание 2. Гарантируется, что итерируемый объект, передаваемый в функцию, не является множеством.

def around(iterable):
    it = iter(iterable)
    i = next(it, None)
    n= None
    while i != None:
        i, prev = next(it, None), i
        yield (n,prev, i)
        n=prev


# Sample Input 1:
#
# numbers = [1, 2, 3, 4, 5]
#
# print(*around(numbers))
# Sample Output 1:
#
# (None, 1, 2) (1, 2, 3) (2, 3, 4) (3, 4, 5) (4, 5, None)
# Sample Input 2:
#
# iterator = iter('hey')
#
# print(*around(iterator))
# Sample Output 2:
#
# (None, 'h', 'e') ('h', 'e', 'y') ('e', 'y', None)



