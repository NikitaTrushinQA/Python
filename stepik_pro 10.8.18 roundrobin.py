# Реализуйте функцию roundrobin(), которая принимает произвольное количество позиционных аргументов, каждый из которых является итерируемым объектом.
#
# Функция должна возвращать итератор, генерирующий последовательность из элементов всех переданных итерируемых объектов:
# сначала первый элемент первого итерируемого объекта, затем первый элемент второго итерируемого объекта, и так далее;
# после второй элемент первого итерируемого объекта, затем второй элемент второго итерируемого объекта, и так далее.
#
# Примечание 1. Элементы итерируемых объектов в возвращаемом функцией итераторе должны располагаться в своем исходном порядке.
#
# Примечание 2. Гарантируется, что итерируемый объект, передаваемый в функцию, не является множеством.

from itertools import zip_longest

def roundrobin(*args):
    rez = zip_longest(*args,fillvalue='заглушка')
    gen = (i for j in rez for i in j if i!='заглушка' )
    yield from gen


# Sample Input 1:
#
# print(*roundrobin('abc', 'd', 'ef'))
# Sample Output 1:
#
# a d e b f c
# Sample Input 2:
#
# numbers = [1, 2, 3]
# letters = iter('beegeek')
#
# print(*roundrobin(numbers, letters))
# Sample Output 2:
#
# 1 b 2 e 3 e g e e k
# Sample Input 3:
#
# print(list(roundrobin()))
# Sample Output 3:
#
# []